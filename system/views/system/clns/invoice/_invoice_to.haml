:ruby
  firm    = Clns::PartnerFirm.find_by(firm: true)
  today   = Date.today
  y       = params[:p_y].nil? ? today.year  : params[:p_y].to_i
  m       = params[:p_m].nil? ? today.month : params[:p_m].to_i
  dln_ary = params[:dln_ary] == 'true' ? [] : params[:dln_ary].split(',') if params[:dln_ary]
  bckgrnd = {"dpct" => "#FFBFF0","frsg" => "#DDDDDD","trbd" => "#FFFF99","dpsb" => "#BFFFBF","hcct" => "#B0AFBF"}

%span#hidden_data{data: {dialog: "filter",model_name: mat(@object,'model_name'),oid: "null",js_ext: 'desk_invoice'}}
%article#xhr_info.info
  %i.fa.fa-info-circle.fa-lg.blue
  = t('intro.filter.desk_invoice.main')
%form{action: "/sys/#{@path}", method: 'get'}
  %table
    %thead
      = partial 'clns/shared/select_params', locals: {colspan: '5'}
      %tr.pdb-05
        %td
          %input#client_id.select2{type: 'hidden', style: 'width:200px', data: {minlength: '2',ph: '0',search: 'Clns::PartnerFirm'}}
          %input#client_d_id.select2{type: 'hidden', style: 'width:200px', data: {minlength: '0',ph: '1',search: 'Clns::PartnerFirm'}}
          %button#client_d{type: "button", data: {action: "create", icon: "circle-plus"}}=  t('button.create') + " Delegat!"
      - if params[:client_id]
        - dlns = Clns::DeliveryNote.monthly(y,m).charged(false).where(:client_id  => params[:client_id])
        - if dlns.empty?
          %tr.dlns.pdb-05
            %td
              %detail.detail
                %i.fa.fa-info-circle.fa-lg.blue
                = t('intro.filter.desk_invoice.no_dln')
        - else
          %tr.dlns.pdb-05
            %td
              %span{style: 'display:inline-block'}
                - dlns.each_with_index do |dln,i|
                  %label.doc_name_list{style: "background-color: #{bckgrnd[dln.name.split('_')[1].downcase]}",
                         title: "#{dln.freights_list.join("\n")}"}
                    %input.dln_ary{id:dln.id,type: 'checkbox',checked: dln_ary.include?(dln.id.to_s)}
                    = dln.doc_name
          %tr.dlns.pdb-05
            %td
              %span= t('intro.filter.desk_invoice.legend')
              - firm.units.asc(:slug).each do |u|
                %span{style: "background-color: #{bckgrnd[u.slug.downcase]}",title: "#{u.name[1]}"}= u.name[0]
              %br
              %span= t('intro.filter.desk_invoice.hover')
      %tbody
        - unless dln_ary.empty?
          %tr.dlns
            %td
              %table.inner
                %tbody.inner
                  %tr
                    - mat(@object,'table_header')[0..-5].each do |label|
                      %td
                        %span= label
                  - data = Clns::DeliveryNote.where(:id.in => dln_ary).sum_freights_inv; data.sort.each do |s|
                    %tr
                      %td
                        %span= s[1][0]
                      %td.ta-ce
                        %span= s[1][2]
                      %td.ta-ri
                        %span= "%.4f" % s[1][3]
                      %td.ta-ri
                        %span= "%.2f" % s[1][4]
                      %td.ta-ri
                        %span= "%.2f" % s[1][5]
                  %tr.result
                    %td{:colspan => "4"}= "Total"
                    %td
                      %span= "%.2f" % data.values.sum{|r| r[5]}
    %tfoot
      %tr
        - td_buttonset(['create','cancel'],{style: 'ta-ce', create: {text: t('button.create') + " FacurÄƒ!"}})
